name: claude

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all branches
          token: ${{ secrets.PAT }}

      - name: Check for existing Claude branch
        id: check_branch
        run: |
          if [ "${{ github.event_name }}" = "issues" ] || [ "${{ github.event_name }}" = "issue_comment" ]; then
            ISSUE_NUMBER=${{ github.event.issue.number }}
            BRANCH_NAME="claude/${ISSUE_NUMBER}"
            
            # Check if branch exists remotely
            if git ls-remote --heads origin "$BRANCH_NAME" | grep -q "$BRANCH_NAME"; then
              echo "branch_exists=true" >> $GITHUB_OUTPUT
              echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
              echo "Found existing branch: $BRANCH_NAME"
            else
              echo "branch_exists=false" >> $GITHUB_OUTPUT
              echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
              echo "No existing branch found, will create: $BRANCH_NAME"
            fi
          else
            echo "branch_exists=false" >> $GITHUB_OUTPUT
            echo "Not an issue event, using default behavior"
          fi

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          github_token: ${{ secrets.PAT }}

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"

          # Optional: Customize the trigger phrase (default: @claude)
          trigger_phrase: "@claude"

          # Optional: Trigger when specific user is assigned to an issue
          assignee_trigger: "claude"

          # Optional: Allow Claude to run specific commands
          # allowed_tools: "Bash(npm install),Bash(npm run build),Bash(npm run test:*),Bash(npm run lint:*)"

          # Optional: Add custom instructions for Claude to customize its behavior for your project
          custom_instructions: |
            Follow the conventions and workflows defined in docs directory
            
            BRANCH NAMING STRATEGY:
            - For issue-related work, ALWAYS use branch name format: claude/{issue_number}
            - Check if branch claude/{issue_number} already exists before creating a new one
            - If the branch exists, switch to it and continue work there
            - If the branch doesn't exist, create it with the name claude/{issue_number}
            - Example: for issue #74, use branch name "claude/74"
            - This ensures all Claude interactions within the same issue use the same branch

          # Set base branch for issue-specific branches
          base_branch: ${{ steps.check_branch.outputs.branch_exists == 'true' && steps.check_branch.outputs.branch_name || '' }}

          # Optional: Custom environment variables for Claude
          # claude_env: |
          #   NODE_ENV: test